{"version":3,"file":"emails-editor.es5.js","sources":["../src/strings.ts","../src/utils/dom.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/utils/validation.ts","../src/emails-editor.ts"],"sourcesContent":["export const INPUT_PLACEHOLDER = 'add more people...'\n","const CLASS_NAME_UNIQUE_PREFIX = 'mee-' // mee - Miro Emails Editor\n\nfunction setClass(element: Element, className: string) {\n  const existingClass = element.getAttribute('class')\n  const newClass = `${CLASS_NAME_UNIQUE_PREFIX}${className}`\n  element.setAttribute('class', existingClass ? `${existingClass} ${newClass}` : newClass)\n}\n\nexport { setClass }\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","function isValidEmail(email: string) {\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return regex.test(email.toLowerCase())\n}\n\nexport { isValidEmail }\n","import { INPUT_PLACEHOLDER } from './strings'\nimport { setClass } from './utils/dom'\n\nimport './styles.scss'\nimport { isValidEmail } from './utils/validation'\n\ninterface Props {\n  container: Element\n  onChange?: (emailsList: string[]) => void\n}\n\nexport default class EmailsEditor {\n  private props: Props\n  private container: Element\n  private input: HTMLInputElement | null = null\n\n  constructor(props: Props) {\n    if (!this) {\n      throw new Error('EmailsEditor should be instantiated with \"new\" keyword!')\n    }\n    if (!props.container) {\n      throw new Error(\n        'EmailsEditor requires DOM element to attach ' +\n          `please pass correct container. You've passed: ${props.container}`\n      )\n    }\n    if (props.container.hasChildNodes()) {\n      throw new Error('Container DOM element for EmailsEditor should be empty!')\n    }\n    this.props = props\n    this.container = props.container\n    setClass(this.container, 'input-container')\n    this.container.addEventListener('click', this.handleContainerClick)\n    this.input = this.createInput()\n    this.container.appendChild(this.input)\n  }\n\n  /**\n   * Public API\n   *\n   */\n\n  /**\n   * Add Email item to the list\n   * @param {string} email Email to be added\n   * @param {boolean} silent Pass true if you don't want subscribers to be notified about this change\n   * @memberof EmailsEditor\n   */\n  public addEmailBlock = (email: string, silent?: boolean) => {\n    const existing = this.container.querySelectorAll(`[data-key=\"${email}\"]`)\n    if (existing && existing.length === 0) {\n      const emailBlock = this.createEmailBlock(email)\n      this.container.insertBefore(emailBlock, this.input)\n      !silent && this.emitOnChange()\n    }\n  }\n\n  /**\n   * Remove Email item from the list\n   * @param {string} email Email to be removed\n   * @param {boolean} silent Pass true if you don't want subscribers to be notified about this change\n   * @memberof EmailsEditor\n   */\n  public removeEmailBlock = (email: string, silent?: boolean) => {\n    const result = this.container.querySelectorAll(`[data-key=\"${email}\"]`)\n    if (result && result.length === 1) {\n      this.container.removeChild(result[0])\n      !silent && this.emitOnChange()\n    }\n  }\n\n  /**\n   * Get current email items, please not that result will include not valid emails\n   * @returns {string[]} emails list\n   * @memberof EmailsEditor\n   */\n  public getEmails = (): string[] => {\n    const result = this.container.querySelectorAll('.mee-email-block')\n    if (result && result.length > 0) {\n      return [].slice.call(result).map((e: HTMLSpanElement) => e.getAttribute('data-key') as string)\n    }\n    return []\n  }\n\n  /**\n   * Get current valid email items\n   * @returns {string[]} emails list\n   * @memberof EmailsEditor\n   */\n  public getValidEmails = () => {\n    this.getEmails().filter(isValidEmail)\n    const result = this.container.querySelectorAll(\n      '.mee-email-block:not(.mee-email-block--invalid)'\n    )\n    if (result && result.length > 0) {\n      return [].slice.call(result).map((e: HTMLSpanElement) => e.getAttribute('data-key'))\n    }\n    return []\n  }\n\n  /**\n   * Set current email items, this will replace existing items with new list\n   * @param {string[]} emails emails list\n   * @memberof EmailsEditor\n   */\n  public setEmails = (emails: string[]) => {\n    if (emails && Array.isArray(emails)) {\n      // \"silently\" clear existing\n      const existingEmails = this.getEmails()\n      existingEmails.map(email => this.removeEmailBlock(email, false))\n      // \"silently\" set new list\n      emails.map(email => this.addEmailBlock(email, false))\n      // and then notify clients\n      this.emitOnChange()\n    }\n  }\n\n  /**\n   * Destruct EmailsEditor and clean up\n   * @memberof EmailsEditor\n   */\n  public destruct() {\n    if (this.container) {\n      this.container.removeAttribute('class')\n      this.container.removeEventListener('click', this.handleContainerClick)\n    }\n    if (this.input) {\n      while (this.container.firstChild) {\n        this.container.removeChild(this.container.firstChild)\n      }\n    }\n  }\n\n  /**\n   * Element factories\n   */\n\n  private createInput = (): HTMLInputElement => {\n    const input = document.createElement('input')\n    setClass(input, 'input')\n    input.setAttribute('placeholder', INPUT_PLACEHOLDER)\n    input.addEventListener('blur', this.handleInputBlur)\n    input.addEventListener('keydown', this.handleInputKeyDown)\n    input.addEventListener('paste', this.handleInputPaste)\n    return input\n  }\n\n  private createEmailBlock = (email: string): HTMLSpanElement => {\n    const emailBlock = document.createElement('span')\n    setClass(emailBlock, 'email-block')\n    if (!isValidEmail(email)) {\n      setClass(emailBlock, 'email-block--invalid')\n    }\n    emailBlock.textContent = email\n    emailBlock.setAttribute('data-key', email)\n    const removeLink = this.createRemoveLink(email)\n    emailBlock.appendChild(removeLink)\n    return emailBlock\n  }\n\n  private createRemoveLink = (email: string): HTMLAnchorElement => {\n    const removeLink = document.createElement('a')\n    removeLink.innerHTML = '&times;'\n    removeLink.setAttribute('href', '#')\n    removeLink.addEventListener('click', this.handleEmailRemove.bind(this, email))\n    setClass(removeLink, 'email-remove')\n    return removeLink\n  }\n\n  /**\n   * Event Handlers\n   *\n   */\n\n  private handleContainerClick = () => {\n    if (this.input) {\n      this.input.focus()\n    }\n  }\n\n  private handleInputBlur = () => {\n    if (this.input && this.input.value) {\n      this.addEmailBlock(this.input.value)\n      this.input.value = ''\n    }\n  }\n\n  private handleInputPaste = (e: ClipboardEvent) => {\n    e.preventDefault()\n    const emails = e.clipboardData && e.clipboardData.getData('text')\n    if (emails) {\n      emails\n        .split(',')\n        .map(email => email.trim())\n        .forEach(email => {\n          this.addEmailBlock(email)\n        })\n    }\n  }\n\n  private handleInputKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault()\n      this.handleInputBlur()\n    }\n    if (\n      e.key === 'Backspace' &&\n      this.input &&\n      !this.input.value &&\n      this.container.childNodes.length > 1\n    ) {\n      this.container.removeChild(this.container.childNodes[this.container.childNodes.length - 2])\n    }\n  }\n\n  private handleEmailRemove = (email: string, e: KeyboardEvent | MouseEvent) => {\n    e.stopPropagation()\n    this.removeEmailBlock(email)\n  }\n\n  private emitOnChange = () => {\n    if (this.props.onChange) {\n      this.props.onChange(this.getEmails())\n    }\n  }\n}\n"],"names":[],"mappings":"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"}