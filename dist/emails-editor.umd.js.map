{"version":3,"file":"emails-editor.umd.js","sources":["../src/strings.ts","../src/utils/dom.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/utils/validation.ts","../src/emails-editor.ts"],"sourcesContent":["export const INPUT_PLACEHOLDER = 'add more people...'\n","const CLASS_NAME_UNIQUE_PREFIX = 'mee-' // mee - Miro Emails Editor\n\nfunction setClass(element: Element, className: string) {\n  const existingClass = element.getAttribute('class')\n  const newClass = `${CLASS_NAME_UNIQUE_PREFIX}${className}`\n  element.setAttribute('class', existingClass ? `${existingClass} ${newClass}` : newClass)\n}\n\nexport { setClass }\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","function isValidEmail(email: string) {\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return regex.test(email.toLowerCase())\n}\n\nexport { isValidEmail }\n","import { INPUT_PLACEHOLDER } from './strings'\nimport { setClass } from './utils/dom'\n\nimport './styles.scss'\nimport { isValidEmail } from './utils/validation'\n\ninterface Props {\n  container: Element\n  onChange?: (emailsList: string[]) => void\n}\n\nexport default class EmailsEditor {\n  private props: Props\n  private container: Element\n  private input: HTMLInputElement | null = null\n\n  constructor(props: Props) {\n    if (!this) {\n      throw new Error('EmailsEditor should be instantiated with \"new\" keyword!')\n    }\n    if (!props.container) {\n      throw new Error(\n        'EmailsEditor requires DOM element to attach ' +\n          `please pass correct container. You've passed: ${props.container}`\n      )\n    }\n    if (props.container.hasChildNodes()) {\n      throw new Error('Container DOM element for EmailsEditor should be empty!')\n    }\n    this.props = props\n    this.container = props.container\n    setClass(this.container, 'input-container')\n    this.container.addEventListener('click', this.handleContainerClick)\n    this.input = this.createInput()\n    this.container.appendChild(this.input)\n  }\n\n  /**\n   * Public API\n   *\n   */\n\n  /**\n   * Add Email item to the list\n   * @param {string} email Email to be added\n   * @param {boolean} silent Pass true if you don't want subscribers to be notified about this change\n   * @memberof EmailsEditor\n   */\n  public addEmailBlock = (email: string, silent?: boolean) => {\n    const existing = this.container.querySelectorAll(`[data-key=\"${email}\"]`)\n    if (existing && existing.length === 0) {\n      const emailBlock = this.createEmailBlock(email)\n      this.container.insertBefore(emailBlock, this.input)\n      !silent && this.emitOnChange()\n    }\n  }\n\n  /**\n   * Remove Email item from the list\n   * @param {string} email Email to be removed\n   * @param {boolean} silent Pass true if you don't want subscribers to be notified about this change\n   * @memberof EmailsEditor\n   */\n  public removeEmailBlock = (email: string, silent?: boolean) => {\n    const result = this.container.querySelectorAll(`[data-key=\"${email}\"]`)\n    if (result && result.length === 1) {\n      this.container.removeChild(result[0])\n      !silent && this.emitOnChange()\n    }\n  }\n\n  /**\n   * Get current email items, please not that result will include not valid emails\n   * @returns {string[]} emails list\n   * @memberof EmailsEditor\n   */\n  public getEmails = (): string[] => {\n    const result = this.container.querySelectorAll('.mee-email-block')\n    if (result && result.length > 0) {\n      return [].slice.call(result).map((e: HTMLSpanElement) => e.getAttribute('data-key') as string)\n    }\n    return []\n  }\n\n  /**\n   * Get current valid email items\n   * @returns {string[]} emails list\n   * @memberof EmailsEditor\n   */\n  public getValidEmails = () => {\n    this.getEmails().filter(isValidEmail)\n    const result = this.container.querySelectorAll(\n      '.mee-email-block:not(.mee-email-block--invalid)'\n    )\n    if (result && result.length > 0) {\n      return [].slice.call(result).map((e: HTMLSpanElement) => e.getAttribute('data-key'))\n    }\n    return []\n  }\n\n  /**\n   * Set current email items, this will replace existing items with new list\n   * @param {string[]} emails emails list\n   * @memberof EmailsEditor\n   */\n  public setEmails = (emails: string[]) => {\n    if (emails && Array.isArray(emails)) {\n      // \"silently\" clear existing\n      const existingEmails = this.getEmails()\n      existingEmails.map(email => this.removeEmailBlock(email, false))\n      // \"silently\" set new list\n      emails.map(email => this.addEmailBlock(email, false))\n      // and then notify clients\n      this.emitOnChange()\n    }\n  }\n\n  /**\n   * Destruct EmailsEditor and clean up\n   * @memberof EmailsEditor\n   */\n  public destruct() {\n    if (this.container) {\n      this.container.removeAttribute('class')\n      this.container.removeEventListener('click', this.handleContainerClick)\n    }\n    if (this.input) {\n      while (this.container.firstChild) {\n        this.container.removeChild(this.container.firstChild)\n      }\n    }\n  }\n\n  /**\n   * Element factories\n   */\n\n  private createInput = (): HTMLInputElement => {\n    const input = document.createElement('input')\n    setClass(input, 'input')\n    input.setAttribute('placeholder', INPUT_PLACEHOLDER)\n    input.addEventListener('blur', this.handleInputBlur)\n    input.addEventListener('keydown', this.handleInputKeyDown)\n    input.addEventListener('paste', this.handleInputPaste)\n    return input\n  }\n\n  private createEmailBlock = (email: string): HTMLSpanElement => {\n    const emailBlock = document.createElement('span')\n    setClass(emailBlock, 'email-block')\n    if (!isValidEmail(email)) {\n      setClass(emailBlock, 'email-block--invalid')\n    }\n    emailBlock.textContent = email\n    emailBlock.setAttribute('data-key', email)\n    const removeLink = this.createRemoveLink(email)\n    emailBlock.appendChild(removeLink)\n    return emailBlock\n  }\n\n  private createRemoveLink = (email: string): HTMLAnchorElement => {\n    const removeLink = document.createElement('a')\n    removeLink.innerHTML = '&times;'\n    removeLink.setAttribute('href', '#')\n    removeLink.addEventListener('click', this.handleEmailRemove.bind(this, email))\n    setClass(removeLink, 'email-remove')\n    return removeLink\n  }\n\n  /**\n   * Event Handlers\n   *\n   */\n\n  private handleContainerClick = () => {\n    if (this.input) {\n      this.input.focus()\n    }\n  }\n\n  private handleInputBlur = () => {\n    if (this.input && this.input.value) {\n      this.addEmailBlock(this.input.value)\n      this.input.value = ''\n    }\n  }\n\n  private handleInputPaste = (e: ClipboardEvent) => {\n    e.preventDefault()\n    const emails = e.clipboardData && e.clipboardData.getData('text')\n    if (emails) {\n      emails\n        .split(',')\n        .map(email => email.trim())\n        .forEach(email => {\n          this.addEmailBlock(email)\n        })\n    }\n  }\n\n  private handleInputKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault()\n      this.handleInputBlur()\n    }\n    if (\n      e.key === 'Backspace' &&\n      this.input &&\n      !this.input.value &&\n      this.container.childNodes.length > 1\n    ) {\n      this.container.removeChild(this.container.childNodes[this.container.childNodes.length - 2])\n    }\n  }\n\n  private handleEmailRemove = (email: string, e: KeyboardEvent | MouseEvent) => {\n    e.stopPropagation()\n    this.removeEmailBlock(email)\n  }\n\n  private emitOnChange = () => {\n    if (this.props.onChange) {\n      this.props.onChange(this.getEmails())\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;EAAO,IAAM,iBAAiB,GAAG,oBAAoB,CAAA;;ECArD,IAAM,wBAAwB,GAAG,MAAM,CAAA;EAEvC,SAAS,QAAQ,CAAC,OAAgB,EAAE,SAAiB;MACnD,IAAM,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;MACnD,IAAM,QAAQ,GAAG,KAAG,wBAAwB,GAAG,SAAW,CAAA;MAC1D,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,GAAM,aAAa,SAAI,QAAU,GAAG,QAAQ,CAAC,CAAA;EAC1F,CAAC;;ECND,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE9B,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAE1D,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAE1B,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;EAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;EACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAChD,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;EAC9B,KAAK;EACL,GAAG,MAAM;EACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;EAC5B,GAAG;;EAEH,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;EACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;EACnC,GAAG,MAAM;EACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;EACpD,GAAG;EACH,CAAC;;;;;ECzBD,SAAS,YAAY,CAAC,KAAa;MACjC,IAAM,KAAK,GAAG,wJAAwJ,CAAA;MACtK,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAA;EACxC,CAAC;;ECQD;MAKE,sBAAY,KAAY;UAAxB,iBAmBC;UArBO,UAAK,GAA4B,IAAI,CAAA;;;;;;;;;;;UAkCtC,kBAAa,GAAG,UAAC,KAAa,EAAE,MAAgB;cACrD,IAAM,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,iBAAc,KAAK,QAAI,CAAC,CAAA;cACzE,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;kBACrC,IAAM,UAAU,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;kBAC/C,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,CAAA;kBACnD,CAAC,MAAM,IAAI,KAAI,CAAC,YAAY,EAAE,CAAA;eAC/B;WACF,CAAA;;;;;;;UAQM,qBAAgB,GAAG,UAAC,KAAa,EAAE,MAAgB;cACxD,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,iBAAc,KAAK,QAAI,CAAC,CAAA;cACvE,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;kBACjC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;kBACrC,CAAC,MAAM,IAAI,KAAI,CAAC,YAAY,EAAE,CAAA;eAC/B;WACF,CAAA;;;;;;UAOM,cAAS,GAAG;cACjB,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAA;cAClE,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;kBAC/B,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,CAAkB,IAAK,OAAA,CAAC,CAAC,YAAY,CAAC,UAAU,CAAW,GAAA,CAAC,CAAA;eAC/F;cACD,OAAO,EAAE,CAAA;WACV,CAAA;;;;;;UAOM,mBAAc,GAAG;cACtB,KAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;cACrC,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAC5C,iDAAiD,CAClD,CAAA;cACD,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;kBAC/B,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,CAAkB,IAAK,OAAA,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,GAAA,CAAC,CAAA;eACrF;cACD,OAAO,EAAE,CAAA;WACV,CAAA;;;;;;UAOM,cAAS,GAAG,UAAC,MAAgB;cAClC,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;kBAEnC,IAAM,cAAc,GAAG,KAAI,CAAC,SAAS,EAAE,CAAA;kBACvC,cAAc,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,GAAA,CAAC,CAAA;;kBAEhE,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,GAAA,CAAC,CAAA;;kBAErD,KAAI,CAAC,YAAY,EAAE,CAAA;eACpB;WACF,CAAA;;;;UAsBO,gBAAW,GAAG;cACpB,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;cAC7C,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;cACxB,KAAK,CAAC,YAAY,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAA;cACpD,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAI,CAAC,eAAe,CAAC,CAAA;cACpD,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAI,CAAC,kBAAkB,CAAC,CAAA;cAC1D,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAA;cACtD,OAAO,KAAK,CAAA;WACb,CAAA;UAEO,qBAAgB,GAAG,UAAC,KAAa;cACvC,IAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;cACjD,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA;cACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;kBACxB,QAAQ,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAA;eAC7C;cACD,UAAU,CAAC,WAAW,GAAG,KAAK,CAAA;cAC9B,UAAU,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;cAC1C,IAAM,UAAU,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;cAC/C,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;cAClC,OAAO,UAAU,CAAA;WAClB,CAAA;UAEO,qBAAgB,GAAG,UAAC,KAAa;cACvC,IAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;cAC9C,UAAU,CAAC,SAAS,GAAG,SAAS,CAAA;cAChC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;cACpC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,EAAE,KAAK,CAAC,CAAC,CAAA;cAC9E,QAAQ,CAAC,UAAU,EAAE,cAAc,CAAC,CAAA;cACpC,OAAO,UAAU,CAAA;WAClB,CAAA;;;;;UAOO,yBAAoB,GAAG;cAC7B,IAAI,KAAI,CAAC,KAAK,EAAE;kBACd,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;eACnB;WACF,CAAA;UAEO,oBAAe,GAAG;cACxB,IAAI,KAAI,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE;kBAClC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;kBACpC,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAA;eACtB;WACF,CAAA;UAEO,qBAAgB,GAAG,UAAC,CAAiB;cAC3C,CAAC,CAAC,cAAc,EAAE,CAAA;cAClB,IAAM,MAAM,GAAG,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;cACjE,IAAI,MAAM,EAAE;kBACV,MAAM;uBACH,KAAK,CAAC,GAAG,CAAC;uBACV,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,EAAE,GAAA,CAAC;uBAC1B,OAAO,CAAC,UAAA,KAAK;sBACZ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;mBAC1B,CAAC,CAAA;eACL;WACF,CAAA;UAEO,uBAAkB,GAAG,UAAC,CAAgB;cAC5C,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE;kBACtC,CAAC,CAAC,cAAc,EAAE,CAAA;kBAClB,KAAI,CAAC,eAAe,EAAE,CAAA;eACvB;cACD,IACE,CAAC,CAAC,GAAG,KAAK,WAAW;kBACrB,KAAI,CAAC,KAAK;kBACV,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK;kBACjB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EACpC;kBACA,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;eAC5F;WACF,CAAA;UAEO,sBAAiB,GAAG,UAAC,KAAa,EAAE,CAA6B;cACvE,CAAC,CAAC,eAAe,EAAE,CAAA;cACnB,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;WAC7B,CAAA;UAEO,iBAAY,GAAG;cACrB,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;kBACvB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,CAAA;eACtC;WACF,CAAA;UA/MC,IAAI,CAAC,IAAI,EAAE;cACT,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAA;WAC3E;UACD,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;cACpB,MAAM,IAAI,KAAK,CACb,8CAA8C;mBAC5C,mDAAiD,KAAK,CAAC,SAAW,CAAA,CACrE,CAAA;WACF;UACD,IAAI,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE;cACnC,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAA;WAC3E;UACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;UAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAA;UAChC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAA;UAC3C,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAA;UACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;UAC/B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;OACvC;;;;;MAsFM,+BAAQ,GAAf;UACE,IAAI,IAAI,CAAC,SAAS,EAAE;cAClB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;cACvC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAA;WACvE;UACD,IAAI,IAAI,CAAC,KAAK,EAAE;cACd,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;kBAChC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;eACtD;WACF;OACF;MA8FH,mBAAC;EAAD,CAAC,IAAA;;;;;;;;"}